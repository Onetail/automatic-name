const {
  GenderEnum,
  UsernameLanguageEnum,
  UsernameTagTypeEnum,
  UsernameRandomTagDefaultLength,
} = require('../enum/name');
const uuid = require('uuid');

class NameService {
  constructor() {
    this.firstname = null;
    this.lastname = null;
    this.gender = null;
    this.tag = null;
    this.spacing = ' ';

    this.chinese = {
      firstname: [
        '赵',
        '钱',
        '孙',
        '李',
        '周',
        '吴',
        '郑',
        '王',
        '冯',
        '陈',
        '楮',
        '卫',
        '蒋',
        '沈',
        '韩',
        '杨',
        '朱',
        '秦',
        '尤',
        '许',
        '何',
        '吕',
        '施',
        '张',
        '孔',
        '曹',
        '严',
        '华',
        '金',
        '魏',
        '陶',
        '姜',
        '戚',
        '谢',
        '邹',
        '喻',
        '柏',
        '水',
        '窦',
        '章',
        '云',
        '苏',
        '潘',
        '葛',
        '奚',
        '范',
        '彭',
        '郎',
        '鲁',
        '韦',
        '昌',
        '马',
        '苗',
        '凤',
        '花',
        '方',
        '俞',
        '任',
        '袁',
        '柳',
        '酆',
        '鲍',
        '史',
        '唐',
        '费',
        '廉',
        '岑',
        '薛',
        '雷',
        '贺',
        '倪',
        '汤',
        '滕',
        '殷',
        '罗',
        '毕',
        '郝',
        '邬',
        '安',
        '常',
        '乐',
        '于',
        '时',
        '傅',
        '皮',
        '卞',
        '齐',
        '康',
        '伍',
        '余',
        '元',
        '卜',
        '顾',
        '孟',
        '平',
        '黄',
        '和',
        '穆',
        '萧',
        '尹',
        '姚',
        '邵',
        '湛',
        '汪',
        '祁',
        '毛',
        '禹',
        '狄',
        '米',
        '贝',
        '明',
        '臧',
        '计',
        '伏',
        '成',
        '戴',
        '谈',
        '宋',
        '茅',
        '庞',
        '熊',
        '纪',
        '舒',
        '屈',
        '项',
        '祝',
        '董',
        '梁',
        '杜',
        '阮',
        '蓝',
        '闽',
        '席',
        '季',
        '麻',
        '强',
        '贾',
        '路',
        '娄',
        '危',
        '江',
        '童',
        '颜',
        '郭',
        '梅',
        '盛',
        '林',
        '刁',
        '锺',
        '徐',
        '丘',
        '骆',
        '高',
        '夏',
        '蔡',
        '田',
        '樊',
        '胡',
        '凌',
        '霍',
        '虞',
        '万',
        '支',
        '柯',
        '昝',
        '管',
        '卢',
        '莫',
        '经',
        '房',
        '裘',
        '缪',
        '干',
        '解',
        '应',
        '宗',
        '丁',
        '宣',
        '贲',
        '邓',
        '郁',
        '单',
        '杭',
        '洪',
        '包',
        '诸',
        '左',
        '石',
        '崔',
        '吉',
        '钮',
        '龚',
        '程',
        '嵇',
        '邢',
        '滑',
        '裴',
        '陆',
        '荣',
        '翁',
        '荀',
        '羊',
        '於',
        '惠',
        '甄',
        '麹',
        '家',
        '封',
        '芮',
        '羿',
        '储',
        '靳',
        '汲',
        '邴',
        '糜',
        '松',
        '井',
        '段',
        '富',
        '巫',
        '乌',
        '焦',
        '巴',
        '弓',
        '牧',
        '隗',
        '山',
        '谷',
        '车',
        '侯',
        '宓',
        '蓬',
        '全',
        '郗',
        '班',
        '仰',
        '秋',
        '仲',
        '伊',
        '宫',
        '宁',
        '仇',
        '栾',
        '暴',
        '甘',
        '斜',
        '厉',
        '戎',
        '祖',
        '武',
        '符',
        '刘',
        '景',
        '詹',
        '束',
        '龙',
        '叶',
        '幸',
        '司',
        '韶',
        '郜',
        '黎',
        '蓟',
        '薄',
        '印',
        '宿',
        '白',
        '怀',
        '蒲',
        '邰',
        '从',
        '鄂',
        '索',
        '咸',
        '籍',
        '赖',
        '卓',
        '蔺',
        '屠',
        '蒙',
        '池',
        '乔',
        '阴',
        '郁',
        '胥',
        '能',
        '苍',
        '双',
        '闻',
        '莘',
        '党',
        '翟',
        '谭',
        '贡',
        '劳',
        '逄',
        '姬',
        '申',
        '扶',
        '堵',
        '冉',
        '宰',
        '郦',
        '雍',
        '郤',
        '璩',
        '桑',
        '桂',
        '濮',
        '牛',
        '寿',
        '通',
        '边',
        '扈',
        '燕',
        '冀',
        '郏',
        '浦',
        '尚',
        '农',
        '温',
        '别',
        '庄',
        '晏',
        '柴',
        '瞿',
        '阎',
        '充',
        '慕',
        '连',
        '茹',
        '习',
        '宦',
        '艾',
        '鱼',
        '容',
        '向',
        '古',
        '易',
        '慎',
        '戈',
        '廖',
        '庾',
        '终',
        '暨',
        '居',
        '衡',
        '步',
        '都',
        '耿',
        '满',
        '弘',
        '匡',
        '国',
        '文',
        '寇',
        '广',
        '禄',
        '阙',
        '东',
        '欧',
        '殳',
        '沃',
        '利',
        '蔚',
        '越',
        '夔',
        '隆',
        '师',
        '巩',
        '厍',
        '聂',
        '晁',
        '勾',
        '敖',
        '融',
        '冷',
        '訾',
        '辛',
        '阚',
        '那',
        '简',
        '饶',
        '空',
        '曾',
        '毋',
        '沙',
        '乜',
        '养',
        '鞠',
        '须',
        '丰',
        '巢',
        '关',
        '蒯',
        '相',
        '查',
        '后',
        '荆',
        '红',
        '游',
        '竺',
        '权',
        '逑',
        '盖',
        '益',
        '桓',
        '公',
        '万俟',
        '司马',
        '上官',
        '欧阳',
        '夏侯',
        '诸葛',
        '闻人',
        '东方',
        '赫连',
        '皇甫',
        '尉迟',
        '公羊',
        '澹台',
        '公冶',
        '宗政',
        '濮阳',
        '淳于',
        '单于',
        '太叔',
        '申屠',
        '公孙',
        '仲孙',
        '轩辕',
        '令狐',
        '锺离',
        '宇文',
        '长孙',
        '慕容',
        '鲜于',
        '闾丘',
        '司徒',
        '司空',
        '丌官',
        '司寇',
        '仉',
        '督',
        '子车',
        '颛孙',
        '端木',
        '巫马',
        '公西',
        '漆雕',
        '乐正',
        '壤驷',
        '公良',
        '拓拔',
        '夹谷',
        '宰父',
        '谷梁',
        '晋',
        '楚',
        '阎',
        '法',
        '汝',
        '鄢',
        '涂',
        '钦',
        '段干',
        '百里',
        '东郭',
        '南门',
        '呼延',
        '归',
        '海',
        '羊舌',
        '微生',
        '岳',
        '帅',
        '缑',
        '亢',
        '况',
        '后',
        '有',
        '琴',
        '梁丘',
        '左丘',
        '东门',
        '西门',
        '商',
        '牟',
        '佘',
        '佴',
        '伯',
        '赏',
        '南宫',
        '墨',
        '哈',
        '谯',
        '笪',
        '年',
        '爱',
        '阳',
        '佟',
        '第五',
        '言',
        '福',
      ],
      lastname: {
        male: [
          '苑博',
          '杰邦',
          '文材',
          '文渊',
          '文达',
          '明轩',
          '彬华',
          '瀚福',
          '厉轩',
          '杰裕',
          '俊胜',
          '睿轩',
          '远旭',
          '寒烟',
          '杰毅',
          '鸿灿',
          '远鸿',
          '文兴',
          '志国',
          '鼎遥',
          '镜宇',
          '鸿承',
          '俊伟',
          '鼎翎',
          '修永',
          '世图',
          '俊新',
          '冠宇',
          '寒云',
          '瀚君',
          '弘玮',
          '韵杰',
          '杰雄',
          '文霖',
          '俊帆',
          '昌凯',
          '德春',
          '杰书',
          '昌翔',
          '德元',
          '乐奇',
          '旭翰',
          '君乾',
          '任平',
          '泽信',
          '圣国',
          '弘耀',
          '博远',
          '月阳',
          '泰玄',
          '伦博',
          '龙德',
          '鼎佑',
          '哲瀚',
          '弘振',
          '昌云',
          '新远',
          '贵依',
          '俊颜',
          '文来',
          '玮轩',
          '鼎鸿',
          '秋风',
          '荣银',
          '志辉',
          '博伦',
          '荣春',
          '睿博',
          '世康',
          '瀚景',
          '智涛',
          '晋运',
          '杰翔',
          '晋刚',
          '明新',
          '展瀚',
          '杰依',
          '昌毅',
          '风涛',
          '寒承',
          '圣帆',
          '明志',
          '旭冠',
          '玮博',
          '宇灿',
          '雨瑞',
          '清泉',
          '月星',
          '志欧',
          '德宝',
          '文韵',
          '文祖',
          '文春',
          '韵宇',
          '光耀',
          '弘靖',
          '君翔',
          '棋博',
          '弘浩',
          '宇驰',
          '文驰',
          '彬逸',
          '瀚舟',
          '新杰',
          '哲南',
          '志邦',
          '泽君',
          '文辰',
          '玮畅',
          '彬城',
          '涛胜',
          '晋永',
          '涛羽',
          '鼎宇',
          '棋翰',
          '贵博',
          '桦楠',
          '志伟',
          '弘邦',
          '明瑞',
          '柯勤',
          '青松',
          '德轩',
          '翰辰',
          '远乔',
          '鸿祥',
          '翰颜',
          '杉晖',
          '金福',
          '远瑾',
          '博尘',
          '晋岳',
          '德石',
          '海杉',
          '鼎承',
          '明健',
          '瀚诚',
          '浩新',
          '彬琪',
          '城德',
          '鼎智',
          '圣天',
          '晋枝',
          '德君',
          '曲漾',
          '翰逸',
          '若菲',
          '博泰',
          '秀永',
          '宇瀚',
          '君裕',
          '仁顺',
          '鼎风',
          '辰逸',
          '杰奥',
          '百川',
          '瀚德',
          '浩诚',
          '杰宏',
          '昌奇',
          '丰瞻',
          '博仁',
          '文皓',
          '俊龙',
          '彬锐',
          '畅瑞',
          '昌贤',
          '雪松',
        ],
        female: [
          '玉燕',
          '春柏',
          '楠素',
          '君壁',
          '睿娇',
          '甜英',
          '向卉',
          '丽梅',
          '芙香',
          '云昕',
          '馥烟',
          '娜盈',
          '娜漫',
          '凝雁',
          '紫槐',
          '雪娅',
          '冰兰',
          '幻莲',
          '雪柳',
          '冰旋',
          '甜熙',
          '沛珊',
          '语雅',
          '芳虹',
          '若雪',
          '雨珍',
          '春竹',
          '妙香',
          '花萍',
          '惜茵',
          '沐娟',
          '月爽',
          '瑜柔',
          '红芍',
          '秋柔',
          '紫呜',
          '娇语',
          '雅瑾',
          '妙筠',
          '琪涵',
          '秋荷',
          '茹婕',
          '冰婉',
          '雨双',
          '雨雪',
          '映倚',
          '翠竹',
          '珍美',
          '怡钰',
          '馨梨',
          '娅楠',
          '晓巧',
          '雪芳',
          '韵雪',
          '以菱',
          '静影',
          '依云',
          '凌瑶',
          '巧春',
          '安荷',
          '佳红',
          '雁卉',
          '菲霞',
          '莉梦',
          '梦芹',
          '月虹',
          '以萱',
          '红芳',
          '水云',
          '幻丝',
          '语凤',
          '香怡',
          '婷莉',
          '依柏',
          '润慧',
          '雪曦',
          '璇盈',
          '平绿',
          '乐丹',
          '紫真',
          '念薇',
          '春儿',
          '谷波',
          '菡颖',
          '秋春',
          '蕾碧',
          '珊琴',
          '翠柳',
          '芹香',
          '云燕',
          '紫超',
          '艳姗',
          '瑜昕',
          '念芹',
          '静琪',
          '柔雅',
          '宛凝',
          '沛菡',
          '醉蝶',
          '语嫣',
          '幻紫',
          '萱雅',
          '绮彤',
          '香菱',
          '若蕾',
          '晓玫',
          '馨蕊',
          '水瑶',
          '珊缦',
          '芳菲',
          '海桃',
          '雅儿',
          '蕾雅',
          '碧彤',
          '黛亦',
          '蝶葵',
          '淑颖',
          '寻春',
          '梅雪',
          '如春',
          '紫怡',
          '妍芳',
          '静璇',
          '昕怡',
          '醉珊',
          '紫芳',
          '雨嘉',
          '晓青',
          '艳蓉',
          '采菡',
          '清云',
          '婕莲',
          '冰烟',
          '玫雅',
          '雅彤',
          '茹桃',
          '紫薇',
          '思芳',
          '冰颖',
          '晓亦',
          '含樱',
          '菲槐',
          '水莹',
          '水冰',
          '彤旋',
          '月霞',
          '丹华',
          '海亦',
          '晴柔',
          '曦奇',
          '歆翠',
          '曦冰',
          '灵薇',
          '如凤',
        ],
      },
    };

    this.english = {
      firstname: [
        'Smith',
        'Bailey',
        'Jones',
        'Parker',
        'Taylor',
        'Miller',
        'Williams',
        'Davis',
        'Brown',
        'Murphy',
        'Davies',
        'Price',
        'Evans',
        'Bell',
        'Wilson',
        'Baker',
        'Thomas',
        'Griffiths',
        'Roberts',
        'Kelly',
        'Johnson',
        'Simpson',
        'Lewis',
        'Marshall',
        'Walker',
        'Collins',
        'Robinson',
        'Bennett',
        'Wood',
        'Cox',
        'Thompson',
        'Richardson',
        'White',
        'Fox',
        'Watson',
        'Gray',
        'Jackson',
        'Rose',
        'Wright',
        'Chapman',
        'Green',
        'Hunt',
        'Harris',
        'Robertson',
        'Cooper',
        'Shaw',
        'King',
        'Reynolds',
        'Lee',
        'Lloyd',
        'Martin',
        'Ellis',
        'Clarke',
        'Richards',
        'James',
        'Russell',
        'Morgan',
        'Wilkinson',
        'Hughes',
        'Khan',
        'Edwards',
        'Graham',
        'Hill',
        'Stewart',
        'Moore',
        'Reid',
        'Clark',
        'Murray',
        'Harrison',
        'Powell',
        'Scott',
        'Palmer',
        'Young',
        'Holmes',
        'Morris',
        'Rogers',
        'Hall',
        'Stevens',
        'Ward',
        'Walsh',
        'Turner',
        'Hunter',
        'Carter',
        'Thomson',
        'Phillips',
        'Matthews',
        'Mitchell',
        'Ross',
        'Patel',
        'Owen',
        'Adams',
        'Mason',
        'Campbell',
        'Knight',
        'Anderson',
        'Kennedy',
        'Allen',
        'Butler',
        'Cook',
        'Saunders',
      ],
      lastname: {
        male: [
          'Smith',
          'Johnson',
          'Williams',
          'Jones',
          'Brown',
          'Davis',
          'Miller',
          'Wilson',
          'Moore',
          'Taylor',
          'Anderson',
          'Thomas',
          'Jackson',
          'White',
          'Harris',
          'Martin',
          'Thompson',
          'Garcia',
          'Martinez',
          'Robinson',
          'Clark',
          'Rodriguez',
          'Lewis',
          'Lee',
          'Walker',
          'Hall',
          'Allen',
          'Young',
          'Hernandez',
          'King',
          'Wright',
          'Lopez',
          'Hill',
          'Scott',
          'Green',
          'Adams',
          'Baker',
          'Gonzalez',
          'Nelson',
          'Carter',
          'Mitchell',
          'Perez',
          'Roberts',
          'Turner',
          'Phillips',
          'Campbell',
          'Parker',
          'Evans',
          'Edwards',
          'Collins',
          'Stewart',
          'Sanchez',
          'Morris',
          'Rogers',
          'Reed',
          'Cook',
          'Morgan',
          'Bell',
          'Murphy',
          'Bailey',
          'Rivera',
          'Cooper',
          'Richardson',
          'Cox',
          'Howard',
          'Ward',
          'Torres',
          'Peterson',
          'Gray',
          'Ramirez',
          'James',
          'Watson',
          'Brooks',
          'Kelly',
          'Sanders',
          'Price',
          'Bennett',
          'Wood',
          'Barnes',
          'Ross',
          'Henderson',
          'Coleman',
          'Jenkins',
          'Perry',
          'Powell',
          'Long',
          'Patterson',
          'Hughes',
          'Flores',
          'Washington',
          'Butler',
          'Simmons',
          'Foster',
          'Gonzales',
          'Bryant',
          'Alexander',
          'Russell',
          'Griffin',
          'Diaz',
          'Hayes',
        ],
        female: [
          'Abby',
          'Adley',
          'Amadahy',
          'Amarey',
          'Amity',
          'Amy',
          'Andry',
          'Arely',
          'Ashley',
          'Aubrey',
          'Audrey',
          'Avery',
          'Bailey',
          'Bay',
          'Bellamy',
          'Berkeley',
          'Bethany',
          'Betsy',
          'Betty',
          'Beverly',
          'Bexley',
          'Blakely',
          'Brinkley',
          'Brinley',
          'Brittany',
          'Bunny',
          'Camry',
          'Candy',
          'Carbry',
          'Carly',
          'Cary',
          'Casey',
          'Cassidy',
          'Charity',
          'Charley',
          'Charsley',
          'Chastity',
          'Chauncey',
          'Courtney',
          'Crosby',
          'Daisy',
          'Dalary',
          'Daveney',
          'Delaney',
          'Destiny',
          'Dusty',
          'Elegy',
          'Ellery',
          'Emberly',
          'Embry',
          'Emily',
          'Emmy',
          'Emory',
          'Ensley',
          'Everly',
          'Finley',
          'Gentry',
          'Gilly',
          'Ginny',
          'Glory',
          'Grey',
          'Hadley',
          'Hailey',
          'Haisley',
          'Haley',
          'Harley',
          'Hartley',
          'Hayley',
          'Heavenly',
          'Hedy',
          'Henley',
          'Hilary',
          'Holiday',
          'Holly',
          'Honesty',
          'Honey',
          'Icy',
          'Indy',
          'Ivory',
          'Ivvy',
          'Ivy',
          'Jady',
          'January',
          'Jenny',
          'Jersey',
          'Jetty',
          'Jordy',
          'Journey',
          'Joy',
          'Judy',
          'Kailey',
          'Kassidy',
          'Keeley',
          'Keily',
          'Kelly',
          'Kelsey',
          'Kenley',
          'Kennedy',
          'Kensley',
          'Kerry',
          'Kimberly',
          'Kinley',
          'Kinsley',
          'Knightley',
          'Lacey',
          'Lainey',
          'Landry',
          'Lily',
          'Lindsay',
          'Lindsey',
          'Loxley',
          'Lucy',
          'Macy',
          'Maeby',
          'Mallory',
          'Mandy',
          'Margaery',
          'Marley',
          'Mavy',
          'Mckinley',
          'Melany',
          'Melody',
          'Mercy',
          'Miley',
          'Mindy',
          'Misty',
          'Monday',
          'Nancy',
          'Nataly',
          'Navy',
          'Oakley',
          'Paisley',
          'Pansy',
          'Peggy',
          'Penny',
          'Peony',
          'Perry',
          'Polly',
          'Poppy',
          'Presley',
          'Quinley',
          'Rally',
          'Remy',
          'Ridley',
          'Roxy',
          'Royalty',
          'Rudy',
          'Sally',
          'Sandy',
          'Savvy',
          'Serenity',
          'Shay',
          'Sky',
          'Stacy',
          'Story',
          'Sunday',
          'Sunny',
          'Sydney',
          'Taffy',
          'Tansy',
          'Teddy',
          'Tenley',
          'Terry',
          'Tiffany',
          'Tinley',
          'Tinsley',
          'Toby',
          'Tory',
          'Trinity',
          'Valley',
          'Verity',
          'Waverly',
          'Wednesday',
          'Wellesley',
          'Wendy',
          'Whitley',
          'Whitney',
          'Zoey',
        ],
      },
    };
  }

  async createNewName(language = UsernameLanguageEnum.CHINESE) {
    this.firstname = this[language].firstname[Math.floor(Math.random() * this[language].firstname.length)];
    this.gender = Object.values(GenderEnum)[Math.floor(Math.random() * Object.values(GenderEnum).length)];
    this.lastname = this[language].lastname[this.gender][
      Math.floor(Math.random() * this[language].lastname[this.gender].length)
    ];
  }

  getSpacing() {
    return this.spacing;
  }

  setSpacing(spacing) {
    this.spacing = spacing;
  }

  getUsername() {
    return this.firstname + this.lastname;
  }

  getFullName(spacing) {
    this.spacing = spacing || this.spacing;
    return `${this.firstname}${this.spacing}${this.lastname}`;
  }

  async getUsernameWithTag(type, ...params) {
    this.tag = '#';
    switch (type) {
      case UsernameTagTypeEnum.NUMBER:
        const randomLength = params[0] || UsernameRandomTagDefaultLength;
        this.tag += Math.floor(Math.random() * Math.pow(10, randomLength))
          .toString()
          .padStart(randomLength, 0);
        break;
      case UsernameTagTypeEnum.TIMESTAMP:
        this.tag += Date.now();
        break;
      default:
        this.tag += await uuid[type](...params);
    }
    console.log(this.firstname + this.lastname + this.tag);
    return this.firstname + this.lastname + this.tag;
  }

  async getFullnameWithTag(type, ...params) {
    this.tag = '#';
    switch (type) {
      case UsernameTagTypeEnum.NUMBER:
        const randomLength = params[0] || UsernameRandomTagDefaultLength;
        this.tag += Math.floor(Math.random() * Math.pow(10, randomLength))
          .toString()
          .padStart(randomLength, 0);
        break;
      case UsernameTagTypeEnum.TIMESTAMP:
        this.tag += Date.now();
        break;
      default:
        this.tag += await uuid[type](...params);
    }
    console.log(`${this.firstname}${this.spacing}${this.lastname}${this.spacing}${this.tag}`);
    return `${this.firstname}${this.spacing}${this.lastname}${this.spacing}${this.tag}`;
  }

  async run() {
    await this.createNewName(UsernameLanguageEnum.ENGLISH);
    const username = await this.getUsername();
    const fullname = await this.getFullName();

    await this.getUsernameWithTag(UsernameTagTypeEnum.NUMBER);
    await this.getUsernameWithTag(UsernameTagTypeEnum.NUMBER, 7);
    await this.getUsernameWithTag(UsernameTagTypeEnum.TIMESTAMP);
    await this.getUsernameWithTag('v1');
    await this.getUsernameWithTag('v3', username + fullname, '1b671a64-40d5-491e-99b0-da01ff1f3341');
    await this.getUsernameWithTag('v4');
    await this.getUsernameWithTag('v5', username + fullname, '1b671a64-40d5-491e-99b0-da01ff1f3341');

    await this.setSpacing('_');
    await this.getFullnameWithTag(UsernameTagTypeEnum.NUMBER);
    await this.getFullnameWithTag(UsernameTagTypeEnum.NUMBER, 7);
    await this.getFullnameWithTag(UsernameTagTypeEnum.TIMESTAMP);
    await this.getFullnameWithTag('v1');
    await this.getFullnameWithTag('v3', username + fullname, '1b671a64-40d5-491e-99b0-da01ff1f3341');
    await this.getFullnameWithTag('v4');
    await this.getFullnameWithTag('v5', username + fullname, '1b671a64-40d5-491e-99b0-da01ff1f3341');
  }
}

module.exports = NameService;
